{
  "name": "Unity Editor MCP Server",
  "author": "CoderGamester",
  "author_url": "https://github.com/CoderGamester",
  "category": "Developer Tools",
  "license": "MIT License",
  "package_url": "",
  "source_url": "https://github.com/CoderGamester/mcp-unity",
  "language": "",
  "server_configuration": [
    {
      "name": "LOGGING",
      "required": "No",
      "description": "Enable logging to the terminal",
      "default": "false"
    },
    {
      "name": "UNITY_PORT",
      "required": "No",
      "description": "The port number for the WebSocket server connecting to the Unity Editor",
      "default": "8080"
    },
    {
      "name": "LOGGING_FILE",
      "required": "No",
      "description": "Enable logging to a log.txt file",
      "default": "false"
    }
  ],
  "tools": [
    {
      "name": "execute_menu_item",
      "description": "Performs actions in Unity Editor by triggering menu items via specified paths, enabling automation and integration with AI model clients.",
      "instructions": "Executes a Unity menu item by path",
      "jsonSchema": "{ \"$schema\": \"http://json-schema.org/draft-07/schema#\", \"additionalProperties\": false, \"properties\": { \"menuPath\": { \"description\": \"The path to the menu item to execute (e.g. \\\"GameObject/Create Empty\\\")\", \"type\": \"string\" } }, \"required\": [ \"menuPath\" ], \"type\": \"object\" }"
    },
    {
      "name": "select_object",
      "description": "Sets the selected object in the Unity Editor by specifying its path or ID, enabling precise object manipulation and integration with AI model clients.",
      "instructions": "Sets the selected object in the Unity editor by path or ID",
      "jsonSchema": "{ \"$schema\": \"http://json-schema.org/draft-07/schema#\", \"additionalProperties\": false, \"properties\": { \"objectPath\": { \"description\": \"The path or ID of the object to select (e.g. \\\"Main Camera\\\" or a Unity object ID)\", \"type\": \"string\" } }, \"required\": [ \"objectPath\" ], \"type\": \"object\" }"
    },
    {
      "name": "package_manager",
      "description": "Streamline Unity project setup by managing packages via the Unity Package Manager. Add, configure, and update packages from Unity registry, GitHub, or local disk with specified parameters such as version, branch, or path.",
      "instructions": "Manages packages in the Unity Package Manager",
      "jsonSchema": "{ \"$schema\": \"http://json-schema.org/draft-07/schema#\", \"additionalProperties\": false, \"properties\": { \"branch\": { \"description\": \"The branch to use for GitHub packages (optional)\", \"type\": \"string\" }, \"methodSource\": { \"description\": \"The method source to use (registry, github, or disk) to add the package\", \"type\": \"string\" }, \"packageName\": { \"description\": \"The package name to add from Unity registry (e.g. com.unity.textmeshpro)\", \"type\": \"string\" }, \"path\": { \"description\": \"The path to use (folder path for disk method or subfolder for GitHub)\", \"type\": \"string\" }, \"repositoryUrl\": { \"description\": \"The GitHub repository URL (e.g. https://github.com/username/repo.git)\", \"type\": \"string\" }, \"version\": { \"description\": \"The version to use for registry packages (optional)\", \"type\": \"string\" } }, \"required\": [ \"methodSource\" ], \"type\": \"object\" }"
    },
    {
      "name": "run_tests",
      "description": "Execute Unity's Test Runner tests with specified filters and modes (EditMode, PlayMode, or All), enabling efficient testing within the Unity Editor MCP Server environment.",
      "instructions": "Runs Unity's Test Runner tests",
      "jsonSchema": "{ \"$schema\": \"http://json-schema.org/draft-07/schema#\", \"additionalProperties\": false, \"properties\": { \"testFilter\": { \"description\": \"Optional test filter (e.g. specific test name or namespace)\", \"type\": \"string\" }, \"testMode\": { \"description\": \"The test mode to run (EditMode, PlayMode, or All)\", \"type\": \"string\" } }, \"type\": \"object\" }"
    },
    {
      "name": "notify_message",
      "description": "Sends a custom message to the Unity console, supporting info, warning, or error types, enabling clear communication during development and debugging processes.",
      "instructions": "Sends a message to the Unity console",
      "jsonSchema": "{ \"$schema\": \"http://json-schema.org/draft-07/schema#\", \"additionalProperties\": false, \"properties\": { \"message\": { \"description\": \"The message to display in the Unity console\", \"type\": \"string\" }, \"type\": { \"description\": \"The type of message (info, warning, error)\", \"type\": \"string\" } }, \"required\": [ \"message\" ], \"type\": \"object\" }"
    }
  ],
  "scrape_source": "https://glama.ai/mcp/servers/@CoderGamester/mcp-unity",
  "version": "1.0.0",
  "keywords": []
}